#summary Sharing messages to multiple providers on single click.

=Share Bar=

This option lets you integrate a bar of providers in your app as shown below :

https://socialauth-android.googlecode.com/svn/wiki/images/sharebar.png

  * Load main.xml and create bar using !LinearLayout. You can modify the bar using main.xml for your app.
{{{
    setContentView(R.layout.main);
    LinearLayout bar = (LinearLayout)findViewById(R.id.linearbar);
    bar.setBackgroundResource(R.drawable.bar_gradient);
}}}


  * Create !SocialAuthAdapter object. 
  * Add providers to object.
  * Pass bar object as argument to enable() method. This method will    create the bar and enable providers. 
  * Receive the response in !ResponseListener, A Dialoglistener to listen responses. 
  * Call update() to share the status.

*Here is the code snippet :*
{{{

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
      
        TextView textview = (TextView)findViewById(R.id.text);
        textview.setText("Welcome to SocialAuth Demo. We are sharing text SocialAuth Android by Share Bar.");
        
        LinearLayout bar = (LinearLayout)findViewById(R.id.linearbar);
        bar.setBackgroundResource(R.drawable.bar_gradient);
        
        // Add Bar to library
        adapter = new SocialAuthAdapter(new ResponseListener());
        
        // Add providers
        adapter.addProvider(Provider.FACEBOOK, R.drawable.facebook);
        adapter.addProvider(Provider.TWITTER, R.drawable.twitter);
        adapter.addProvider(Provider.LINKEDIN, R.drawable.linkedin);
        adapter.addProvider(Provider.MYSPACE, R.drawable.myspace);
        adapter.enable(bar);
    }
}}}


==Share Message==
{{{

private final class ResponseListener implements DialogListener 
{
   public void onComplete(Bundle values) {
     	    
   // share your message	
   status = adapter.update("SocialAuth Android");
   }

   public void onError(DialogError error) {
     Log.d("ShareBar" , "Error");
   }

   public void onCancel() {
     Log.d("ShareBar" , "Cancelled");
   }

}

}}}

==Get Profile==
{{{
try 
{
    profileMap =  adapter.getCurrentProvider().getUserProfile();
} 
catch (Exception e) 
{
    e.printStackTrace();
}
				
Log.d("ShareBar",  "Validate ID        = " + profileMap.getValidatedId());
Log.d("ShareBar",  "First Name         = " + profileMap.getFirstName());
Log.d("ShareBar",  "Last Name          = " + profileMap.getLastName());
Log.d("ShareBar",  "Email              = " + profileMap.getEmail());
Log.d("ShareBar",  "Gender  	       = " + profileMap.getGender());
Log.d("ShareBar",  "Country  	       = " + profileMap.getCountry());
Log.d("ShareBar",  "Language  	       = " + profileMap.getLanguage());
Log.d("ShareBar",  "Location 	       = " + profileMap.getLocation());
Log.d("ShareBar",  "Profile Image URL  = " + profileMap.getProfileImageURL());
}}}
  

==Get Contacts==
{{{
List<Contact> contactsList = new ArrayList<Contact>();
				
try 
{
   contactsList = adapter.getCurrentProvider().getContactList();
} 
catch (Exception e) 
{
   e.printStackTrace();
}
				
		
if (contactsList != null && contactsList.size() > 0) 
{
   for (Contact p : contactsList) 
   {
	if (TextUtils.isEmpty(p.getFirstName()) && TextUtils.isEmpty(p.getLastName())) 
	{						    
            p.setFirstName(p.getDisplayName());
	}
						
	Log.d("ShareBar" , "Display Name = " +  p.getDisplayName());
	Log.d("ShareBar" , "First Name   = " +  p.getFirstName());
	Log.d("ShareBar" , "Last Name    = " +  p.getLastName());
	Log.d("ShareBar" , "Contact ID   = " +  p.getId());
	Log.d("ShareBar" , "Profile URL  = " +  p.getProfileUrl());	
						
   }	
}
}}}
 To see the functionality, download *share-bar example* from Downloads page.