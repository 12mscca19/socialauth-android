#summary Share messages to multiple providers through share button.

=!SocialAuthShareButton= 
This option lets you integrate share button in your app. You will get list of providers on clicking the share button as shown below :

https://socialauth-android.googlecode.com/svn/wiki/images/socialshare.png

  When user clicks on the provider, in your handling code you should :
   *	Create instance of !SocialAuthShareButton.
   *	Call enable() method to enable providers
   *	Receive the response in !ResponseListener, A Dialoglistener to listen responses. 
   *	Call update() to share the status.

{{{	
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
      
        // Welcome Message
        TextView textview = (TextView)findViewById(R.id.text);
        textview.setText("Welcome to SocialAuth Demo. We are sharing text SocialAuth Android by share button.");
        
        
        //Create Your Own Share Button
        Button share = (Button)findViewById(R.id.sharebutton);
        share.setText("Share");
        share.setTextColor(Color.WHITE);
        share.setBackgroundResource(R.drawable.button_gradient);
        		
        // Add it to Libarary
        adapter = new SocialAuthShareButton(this,share,new ResponseListener());
             	 
        // Add providers
        adapter.enable(providers , images);
        		
        // set Size of Dialog
        adapter.setDialogSize(30,60);
    }
}}}

==Share Message==
{{{

private final class ResponseListener implements DialogListener 
{
   public void onComplete(Bundle values) {
     	    
   // share your message	
   status = adapter.update("SocialAuth Android");
   }

   public void onError(DialogError error) {
     Log.d("Query" , "Error");
   }

   public void onCancel() {
     Log.d("Query" , "Cancelled");
   }

}

}}}
  
  To see the full functionality, download *!SocialSampleShareButton example* from Downloads page.